What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, it allows the directory to push commits. This allows the user to be able to start using git and keep track of their files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is the area where you decide what to commit into the repository. It is inbetween the working directory and repository. It allows you the user to commit a certain file instead of all files at once if the user wishes.

How can you use the staging area to make sure you have one commit per logical change?

	By using git status and git diff --staged, you can check if these are the exact changes you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	It would be helpful when you want to try different things and explore options in your project. It would allow better organization of what direction you want your project to end up in.

How do the diagrams help you visualize the branch structure?

	It helps show the flow of the commits and see the reachability of each commit.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The 2 branches become one and form their own branch. To show that the branches are connected and that the previous commits and reachable.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	The pros of having automatic merging is that it saves a lot of time and helps with merging files together easily. The cons is that it might add wrong code and introduce new bugs. Always doing merges manually will be more precise and correct but would take a long time to do.